/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBlocklockSender,
  IBlocklockSenderInterface,
} from "../IBlocklockSender";

const _abi = [
  {
    type: "function",
    name: "decrypt",
    inputs: [
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequest",
    inputs: [
      {
        name: "requestId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct TypesLib.BlocklockRequest",
        components: [
          {
            name: "decryptionRequestID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "blockHeight",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ciphertext",
            type: "tuple",
            internalType: "struct TypesLib.Ciphertext",
            components: [
              {
                name: "u",
                type: "tuple",
                internalType: "struct BLS.PointG2",
                components: [
                  {
                    name: "x",
                    type: "uint256[2]",
                    internalType: "uint256[2]",
                  },
                  {
                    name: "y",
                    type: "uint256[2]",
                    internalType: "uint256[2]",
                  },
                ],
              },
              {
                name: "v",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "w",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callback",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "requestBlocklock",
    inputs: [
      {
        name: "blockHeight",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IBlocklockSender__factory {
  static readonly abi = _abi;
  static createInterface(): IBlocklockSenderInterface {
    return new Interface(_abi) as IBlocklockSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBlocklockSender {
    return new Contract(address, _abi, runner) as unknown as IBlocklockSender;
  }
}
