/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SimpleAuction, SimpleAuctionInterface } from "../SimpleAuction";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "durationBlocks",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reservePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "highestBidPaymentWindowBlocks",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "timelockContract",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "auctionEndBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "auctionState",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum SimpleAuctionBase.AuctionState",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "auctioneer",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bidderToBidID",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bidsById",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "bidID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sealedAmount",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "unsealedAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        internalType: "address",
      },
      {
        name: "revealed",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositedReservePrice",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "endAuction",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fulfilHighestBid",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getBidWithBidID",
    inputs: [
      {
        name: "bidID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "sealedAmount",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "unsealedAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        internalType: "address",
      },
      {
        name: "revealed",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBidWithBidder",
    inputs: [
      {
        name: "bidder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "sealedAmount",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "unsealedAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_bidder",
        type: "address",
        internalType: "address",
      },
      {
        name: "revealed",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getHighestBid",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getHighestBidder",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "highestBid",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "highestBidPaid",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "highestBidPaymentDeadlineBlock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "highestBidder",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveBlocklock",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "reservePrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "revealBid",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revealedBidsCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sealedBid",
    inputs: [
      {
        name: "sealedAmount",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "timelock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IBlocklockSender",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalBids",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawDeposit",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawForfeitedDepositFromHighestBidder",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AuctionEnded",
    inputs: [
      {
        name: "winner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BidUnsealed",
    inputs: [
      {
        name: "bidID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "unsealedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DecryptionKeyReceived",
    inputs: [
      {
        name: "bidID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "decryptionKey",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ForfeitedReserveClaimed",
    inputs: [
      {
        name: "auctioneer",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "HighestBidFulfilled",
    inputs: [
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewBid",
    inputs: [
      {
        name: "bidID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "bidder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sealedAmount",
        type: "tuple",
        indexed: false,
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReserveClaimed",
    inputs: [
      {
        name: "claimant",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162002e0238038062002e028339810160408190526200003391620000a0565b60015f55600280546001600160a01b0319163317905583838383620000598443620000ed565b60038190556200006b908390620000ed565b60045560099290925550600180546001600160a81b0319166001600160a01b0390921691909117905550620001139350505050565b5f805f8060808587031215620000b4575f80fd5b845160208601516040870151606088015192965090945092506001600160a01b0381168114620000e2575f80fd5b939692955090935050565b808201808211156200010d57634e487b7160e01b5f52601160045260245ffd5b92915050565b612ce180620001215f395ff3fe60806040526004361061018d575f3560e01c80638b034136116100dc578063b15fafb211610087578063d6c955eb11610062578063d6c955eb14610456578063db2e1eed1461047f578063e895fc7a14610494578063fe67a54b146104c5575f80fd5b8063b15fafb214610400578063d33219b414610415578063d57bde7914610441575f80fd5b8063a1d3150d116100b7578063a1d3150d1461039c578063a5622cd8146103cc578063b11e9929146103e1575f80fd5b80638b0341361461033057806391f9015714610345578063a0c844ea14610371575f80fd5b80634979440a1161013c5780635ec2c7bf116101175780635ec2c7bf1461029b5780637464b636146102c75780637fb45099146102f2575f80fd5b80634979440a1461025557806350817133146102695780635d9418021461027c575f80fd5b806317a1788d1161016c57806317a1788d1461021a5780633e3b903e14610222578063476bffab14610241575f80fd5b80623495a41461019157806307d52fa8146101e1578063117df08814610204575b5f80fd5b34801561019c575f80fd5b5060075473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101ec575f80fd5b506101f660035481565b6040519081526020016101d8565b34801561020f575f80fd5b506102186104d9565b005b6102186106ee565b34801561022d575f80fd5b5061021861023c36600461214d565b610a91565b34801561024c575f80fd5b50610218610cc6565b348015610260575f80fd5b506008546101f6565b6101f6610277366004612164565b610fcf565b348015610287575f80fd5b5061021861029636600461219b565b6112d9565b3480156102a6575f80fd5b506002546101b79073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102d2575f80fd5b506101f66102e1366004612210565b600d6020525f908152604090205481565b3480156102fd575f80fd5b506001546103239074010000000000000000000000000000000000000000900460ff1681565b6040516101d89190612243565b34801561033b575f80fd5b506101f660055481565b348015610350575f80fd5b506007546101b79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561037c575f80fd5b506101f661038b366004612210565b600b6020525f908152604090205481565b3480156103a7575f80fd5b506103bb6103b6366004612210565b611501565b6040516101d8959493929190612370565b3480156103d7575f80fd5b506101f660065481565b3480156103ec575f80fd5b506103bb6103fb36600461214d565b611808565b34801561040b575f80fd5b506101f660045481565b348015610420575f80fd5b506001546101b79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561044c575f80fd5b506101f660085481565b348015610461575f80fd5b50600a5461046f9060ff1681565b60405190151581526020016101d8565b34801561048a575f80fd5b506101f660095481565b34801561049f575f80fd5b506104b36104ae36600461214d565b611ab4565b6040516101d8969594939291906123ca565b3480156104d0575f80fd5b50610218611d31565b6003544310156105305760405162461bcd60e51b815260206004820152601960248201527f41756374696f6e206973207374696c6c206f6e676f696e672e0000000000000060448201526064015b60405180910390fd5b600554600654146105835760405162461bcd60e51b815260206004820181905260248201527f4e6f7420616c6c20626964732068617665206265656e2072657665616c65642e6044820152606401610527565b61058b611e7c565b60075473ffffffffffffffffffffffffffffffffffffffff1633036106185760405162461bcd60e51b815260206004820152602860248201527f48696768657374206269646465722063616e6e6f7420636c61696d207468652060448201527f726573657276652e0000000000000000000000000000000000000000000000006064820152608401610527565b335f908152600b6020526040902054806106745760405162461bcd60e51b815260206004820152601b60248201527f4e6f207265736572766520616d6f756e7420746f20636c61696d2e00000000006044820152606401610527565b335f818152600b60205260408082208290555183156108fc0291849190818181858888f193505050501580156106ac573d5f803e3d5ffd5b5060405181815233907fb17956903b0eeaf0b3d7594ff05a22faab59523d7c39363c95ca9dab6b249da49060200160405180910390a2506106ec60015f55565b565b6003544310156107405760405162461bcd60e51b815260206004820152601960248201527f41756374696f6e206973207374696c6c206f6e676f696e672e000000000000006044820152606401610527565b600554600654146107935760405162461bcd60e51b815260206004820181905260248201527f4e6f7420616c6c20626964732068617665206265656e2072657665616c65642e6044820152606401610527565b61079b611e7c565b5f600854116107ec5760405162461bcd60e51b815260206004820152601460248201527f4869676865737420626964206973207a65726f2e0000000000000000000000006044820152606401610527565b60075473ffffffffffffffffffffffffffffffffffffffff1633146108795760405162461bcd60e51b815260206004820152603160248201527f4f6e6c79207468652068696768657374206269646465722063616e20636f6d7060448201527f6c65746520746865207061796d656e742e0000000000000000000000000000006064820152608401610527565b6004544311156108cb5760405162461bcd60e51b815260206004820152601c60248201527f5061796d656e7420646561646c696e6520686173207061737365642e000000006044820152606401610527565b600a5460ff16156109445760405162461bcd60e51b815260206004820152602360248201527f5061796d656e742068617320616c7265616479206265656e20636f6d706c657460448201527f65642e00000000000000000000000000000000000000000000000000000000006064820152608401610527565b6009546008546109549190612458565b34146109c85760405162461bcd60e51b815260206004820152603e60248201527f5061796d656e74206d75737420626520657175616c20746f206869676865737460448201527f20626964206d696e757320746865207265736572766520616d6f756e742e00006064820152608401610527565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560025460095473ffffffffffffffffffffffffffffffffffffffff909116906108fc90610a209034612471565b6040518115909202915f818181858888f19350505050158015610a45573d5f803e3d5ffd5b5060095433907fa258a92d844674cb1512f274179ac75ba9fb6552b2d412f1959575f09eba20d990610a779034612471565b60405190815260200160405180910390a26106ec60015f55565b600354431015610ae35760405162461bcd60e51b815260206004820152601960248201527f41756374696f6e206973207374696c6c206f6e676f696e672e000000000000006044820152606401610527565b5f818152600c60205260408120549003610b3f5760405162461bcd60e51b815260206004820152601660248201527f42696420494420646f6573206e6f742065786973742e000000000000000000006044820152606401610527565b5f818152600c602052604090206007018054610b5a90612484565b90505f03610bd05760405162461bcd60e51b815260206004820152603760248201527f4269642064656372797074696f6e206b6579206e6f742072656365697665642060448201527f66726f6d2074696d656c6f636b20636f6e74726163742e0000000000000000006064820152608401610527565b5f818152600c60205260408082206001805492517fc9bc18c400000000000000000000000000000000000000000000000000000000815291939273ffffffffffffffffffffffffffffffffffffffff169163c9bc18c491610c3c9190860190600787019060040161258e565b5f60405180830381865afa158015610c56573d5f803e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c9b91908101906126fc565b806020019051810190610cae919061276a565b600883018190559050610cc18382611ebd565b505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610d2d5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792061756374696f6e6565722063616e2063616c6c20746869732e00006044820152606401610527565b600354431015610d7f5760405162461bcd60e51b815260206004820152601960248201527f41756374696f6e206973207374696c6c206f6e676f696e672e000000000000006044820152606401610527565b60055460065414610dd25760405162461bcd60e51b815260206004820181905260248201527f4e6f7420616c6c20626964732068617665206265656e2072657665616c65642e6044820152606401610527565b610dda611e7c565b6004544311610e2b5760405162461bcd60e51b815260206004820181905260248201527f5061796d656e7420646561646c696e6520686173206e6f74207061737365642e6044820152606401610527565b600a5460ff1615610ea45760405162461bcd60e51b815260206004820152602360248201527f5061796d656e742068617320616c7265616479206265656e20636f6d706c657460448201527f65642e00000000000000000000000000000000000000000000000000000000006064820152608401610527565b60075473ffffffffffffffffffffffffffffffffffffffff165f908152600b602052604090205480610f185760405162461bcd60e51b815260206004820152601e60248201527f4e6f20666f72666569746564207265736572766520746f20636c61696d2e00006044820152606401610527565b60075473ffffffffffffffffffffffffffffffffffffffff9081165f908152600b6020526040808220829055600254905192169183156108fc0291849190818181858888f19350505050158015610f71573d5f803e3d5ffd5b506002546040805173ffffffffffffffffffffffffffffffffffffffff9092168252602082018390527f7fcda5f5ce3b9e27603d730b417763d75adf0fde9eb5028108b7025b2a43b7cb910160405180910390a1506106ec60015f55565b5f60035443106110215760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e2068617320616c726561647920656e6465642e0000000000006044820152606401610527565b600954341461109a576040805162461bcd60e51b81526020600482015260248101919091527f426964206d757374206265206163636f6d70616e69656420627920612064657060448201527f6f73697420657175616c20746f2074686520726573657276652070726963652e6064820152608401610527565b335f908152600d602052604090205480156110f75760405162461bcd60e51b815260206004820152601660248201527f426964204944206d75737420626520756e697175652e000000000000000000006044820152606401610527565b61110083611fed565b90505f6040518060c001604052808381526020018561111e9061281b565b815260408051602081810183525f808352818501929092528284018290523360608501526080909301819052858152600c835220825181559082015180518051939450849360018401919082906111789082906002612091565b50602082015161118e9060028084019190612091565b505050602082015160048201906111a59082612927565b50604082015160058201906111ba9082612927565b505050604082015160078201906111d19082612927565b506060820151600882015560808201516009909101805460a090930151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff90921691909117919091179055335f908152600d60209081526040808320859055600b90915281208054349290611278908490612471565b92505081905550600160055f8282546112919190612471565b9091555050604051339083907f6d2565401669a21fb4244aa32157a229554a5e283ec9b30975ce3393d3059d3e906112ca908890612b50565b60405180910390a35092915050565b60035443101561132b5760405162461bcd60e51b815260206004820152601960248201527f41756374696f6e206973207374696c6c206f6e676f696e672e000000000000006044820152606401610527565b60015473ffffffffffffffffffffffffffffffffffffffff1633146113b85760405162461bcd60e51b815260206004820152602560248201527f4f6e6c792074696d656c6f636b20636f6e74726163742063616e2063616c6c2060448201527f746869732e0000000000000000000000000000000000000000000000000000006064820152608401610527565b5f838152600c602052604081205490036114145760405162461bcd60e51b815260206004820152601660248201527f42696420494420646f6573206e6f742065786973742e000000000000000000006044820152606401610527565b5f838152600c60205260409020600701805461142f90612484565b1590506114a45760405162461bcd60e51b815260206004820152603b60248201527f4269642064656372797074696f6e206b657920616c726561647920726563656960448201527f7665642066726f6d2074696d656c6f636b20636f6e74726163742e00000000006064820152608401610527565b5f838152600c60205260409020600781016114c0838583612b62565b50837fa5f1764be51d58f1aac944b323918d8559629995354901df835f530ee808d30c84846040516114f3929190612c78565b60405180910390a250505050565b6115096120cf565b73ffffffffffffffffffffffffffffffffffffffff82165f908152600d60209081526040808320548352600c909152808220815160e0810190925260609291829182919060010181808701828160a084018260028282826020028201915b81548152602001906001019080831161156757505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161159d5750505050508152505081526020016004820180546115cd90612484565b80601f01602080910402602001604051908101604052809291908181526020018280546115f990612484565b80156116445780601f1061161b57610100808354040283529160200191611644565b820191905f5260205f20905b81548152906001019060200180831161162757829003601f168201915b5050505050815260200160058201805461165d90612484565b80601f016020809104026020016040519081016040528092919081815260200182805461168990612484565b80156116d45780601f106116ab576101008083540402835291602001916116d4565b820191905f5260205f20905b8154815290600101906020018083116116b757829003601f168201915b5050509190925250505073ffffffffffffffffffffffffffffffffffffffff87165f908152600d60209081526040808320548352600c909152902060070180549196509061172190612484565b80601f016020809104026020016040519081016040528092919081815260200182805461174d90612484565b80156117985780601f1061176f57610100808354040283529160200191611798565b820191905f5260205f20905b81548152906001019060200180831161177b57829003601f168201915b5050505073ffffffffffffffffffffffffffffffffffffffff9788165f908152600d60209081526040808320548352600c90915290206008810154600990910154979992989097908116965074010000000000000000000000000000000000000000900460ff1694509092505050565b6118106120cf565b5f828152600c6020526040808220815160e0810190925260609291829182919060010181808701828160a084018260028282826020028201915b81548152602001906001019080831161184a57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116118805750505050508152505081526020016004820180546118b090612484565b80601f01602080910402602001604051908101604052809291908181526020018280546118dc90612484565b80156119275780601f106118fe57610100808354040283529160200191611927565b820191905f5260205f20905b81548152906001019060200180831161190a57829003601f168201915b5050505050815260200160058201805461194090612484565b80601f016020809104026020016040519081016040528092919081815260200182805461196c90612484565b80156119b75780601f1061198e576101008083540402835291602001916119b7565b820191905f5260205f20905b81548152906001019060200180831161199a57829003601f168201915b505050919092525050505f878152600c602052604090206007018054919650906119e090612484565b80601f0160208091040260200160405190810160405280929190818152602001828054611a0c90612484565b8015611a575780601f10611a2e57610100808354040283529160200191611a57565b820191905f5260205f20905b815481529060010190602001808311611a3a57829003601f168201915b5050505f9889525050600c602052604090962060088101546009909101549597909573ffffffffffffffffffffffffffffffffffffffff8116955074010000000000000000000000000000000000000000900460ff169350915050565b600c6020525f9081526040908190208054825160e0810190935291600182018160608101828160a084018260028282826020028201915b815481526020019060010190808311611aeb57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611b21575050505050815250508152602001600482018054611b5190612484565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7d90612484565b8015611bc85780601f10611b9f57610100808354040283529160200191611bc8565b820191905f5260205f20905b815481529060010190602001808311611bab57829003601f168201915b50505050508152602001600582018054611be190612484565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0d90612484565b8015611c585780601f10611c2f57610100808354040283529160200191611c58565b820191905f5260205f20905b815481529060010190602001808311611c3b57829003601f168201915b50505050508152505090806007018054611c7190612484565b80601f0160208091040260200160405190810160405280929190818152602001828054611c9d90612484565b8015611ce85780601f10611cbf57610100808354040283529160200191611ce8565b820191905f5260205f20905b815481529060010190602001808311611ccb57829003601f168201915b50505050600883015460099093015491929173ffffffffffffffffffffffffffffffffffffffff8116915074010000000000000000000000000000000000000000900460ff1686565b60025473ffffffffffffffffffffffffffffffffffffffff163314611d985760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792061756374696f6e6565722063616e2063616c6c20746869732e00006044820152606401610527565b600354431015611dea5760405162461bcd60e51b815260206004820152601960248201527f41756374696f6e206973207374696c6c206f6e676f696e672e000000000000006044820152606401610527565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055600754600854604080519182525173ffffffffffffffffffffffffffffffffffffffff909216917fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda9181900360200190a2565b60025f5403611eb7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f55565b5f828152600c60205260408120600881018390556009810180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055600680549192600192611f26908490612471565b909155505060085482118015611f3d575060095482115b15611f915760088290556009810154600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b60098101546040805173ffffffffffffffffffffffffffffffffffffffff90921682526020820184905284917f9bd9ee70ac98944a5affad7da09d461cd3069adc461ce1c3db5b3d310ca5b39d910160405180910390a2505050565b6001546003546040517f46cd2b420000000000000000000000000000000000000000000000000000000081525f92839273ffffffffffffffffffffffffffffffffffffffff909116916346cd2b429161204a918790600401612c93565b6020604051808303815f875af1158015612066573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061208a919061276a565b9392505050565b82600281019282156120bf579160200282015b828111156120bf5782518255916020019190600101906120a4565b506120cb9291506120f6565b5090565b60405180606001604052806120e261210a565b815260200160608152602001606081525090565b5b808211156120cb575f81556001016120f7565b604051806040016040528061211d61212f565b815260200161212a61212f565b905290565b60405180604001604052806002906020820280368337509192915050565b5f6020828403121561215d575f80fd5b5035919050565b5f60208284031215612174575f80fd5b813567ffffffffffffffff81111561218a575f80fd5b820160c0818503121561208a575f80fd5b5f805f604084860312156121ad575f80fd5b83359250602084013567ffffffffffffffff808211156121cb575f80fd5b818601915086601f8301126121de575f80fd5b8135818111156121ec575f80fd5b8760208285010111156121fd575f80fd5b6020830194508093505050509250925092565b5f60208284031215612220575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461208a575f80fd5b602081016002831061227c577f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b91905290565b805f5b60028110156122a4578151845260209384019390910190600101612285565b50505050565b5f5b838110156122c45781810151838201526020016122ac565b50505f910152565b5f81518084526122e38160208601602086016122aa565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b5f8151612323848251612282565b602001516123346040850182612282565b50602082015160c0608085015261234e60c08501826122cc565b9050604083015184820360a086015261236782826122cc565b95945050505050565b60a081525f61238260a0830188612315565b828103602084015261239481886122cc565b6040840196909652505073ffffffffffffffffffffffffffffffffffffffff929092166060830152151560809091015292915050565b86815260c060208201525f6123e260c0830188612315565b82810360408401526123f481886122cc565b6060840196909652505073ffffffffffffffffffffffffffffffffffffffff929092166080830152151560a0909101529392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8181038181111561246b5761246b61242b565b92915050565b8082018082111561246b5761246b61242b565b600181811c9082168061249857607f821691505b6020821081036124cf577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b805f5b60028110156122a45781548452602090930192600191820191016124d8565b5f815461250381612484565b808552602060018381168015612520576001811461255857612583565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838901528284151560051b8901019550612583565b865f52825f205f5b8581101561257b5781548a8201860152908301908401612560565b890184019650505b505050505092915050565b6040815261259f60408201846124d5565b6125af60808201600285016124d5565b60c0808201525f6125c76101008301600486016124f7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08382030160e08401526125fe81600587016124f7565b9050828103602084015261236781856124f7565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040805190810167ffffffffffffffff8111828210171561266257612662612612565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156126af576126af612612565b604052919050565b5f67ffffffffffffffff8211156126d0576126d0612612565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f6020828403121561270c575f80fd5b815167ffffffffffffffff811115612722575f80fd5b8201601f81018413612732575f80fd5b8051612745612740826126b7565b612668565b818152856020838501011115612759575f80fd5b6123678260208301602086016122aa565b5f6020828403121561277a575f80fd5b5051919050565b5f82601f830112612790575f80fd5b61279861263f565b8060408401858111156127a9575f80fd5b845b818110156127c35780358452602093840193016127ab565b509095945050505050565b5f82601f8301126127dd575f80fd5b81356127eb612740826126b7565b8181528460208386010111156127ff575f80fd5b816020850160208301375f918101602001919091529392505050565b5f81360360c081121561282c575f80fd5b6040516060810167ffffffffffffffff828210818311171561285057612850612612565b816040526080841215612861575f80fd5b61286961263f565b93506128753687612781565b84526128843660408801612781565b60208501529282526080850135928084111561289e575f80fd5b6128aa368588016127ce565b602084015260a08601359350808411156128c2575f80fd5b50506128d0368386016127ce565b60408201529392505050565b601f821115610cc157805f5260205f20601f840160051c810160208510156129015750805b601f840160051c820191505b81811015612920575f815560010161290d565b5050505050565b815167ffffffffffffffff81111561294157612941612612565b6129558161294f8454612484565b846128dc565b602080601f8311600181146129a7575f84156129715750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612a3b565b5f858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156129f3578886015182559484019460019091019084016129d4565b5085821015612a2f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a76575f80fd5b830160208101925035905067ffffffffffffffff811115612a95575f80fd5b803603821315612aa3575f80fd5b9250929050565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040818337604080820160408401375f612b0e6080830183612a43565b60c06080860152612b2360c086018284612aaa565b915050612b3360a0840184612a43565b85830360a0870152612b46838284612aaa565b9695505050505050565b602081525f61208a6020830184612af1565b67ffffffffffffffff831115612b7a57612b7a612612565b612b8e83612b888354612484565b836128dc565b5f601f841160018114612bde575f8515612ba85750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355612920565b5f838152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08716915b82811015612c2b5786850135825560209485019460019092019101612c0b565b5086821015612c66577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b602081525f612c8b602083018486612aaa565b949350505050565b828152604060208201525f612c8b6040830184612af156fea264697066735822122047b0b8ca1ee6f8a37074cf2076b7ced4d075378bcd65a007e778b8257312f45464736f6c63430008180033";

type SimpleAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAuction__factory extends ContractFactory {
  constructor(...args: SimpleAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    durationBlocks: BigNumberish,
    reservePrice: BigNumberish,
    highestBidPaymentWindowBlocks: BigNumberish,
    timelockContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      durationBlocks,
      reservePrice,
      highestBidPaymentWindowBlocks,
      timelockContract,
      overrides || {}
    );
  }
  override deploy(
    durationBlocks: BigNumberish,
    reservePrice: BigNumberish,
    highestBidPaymentWindowBlocks: BigNumberish,
    timelockContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      durationBlocks,
      reservePrice,
      highestBidPaymentWindowBlocks,
      timelockContract,
      overrides || {}
    ) as Promise<
      SimpleAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAuction__factory {
    return super.connect(runner) as SimpleAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAuctionInterface {
    return new Interface(_abi) as SimpleAuctionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAuction {
    return new Contract(address, _abi, runner) as unknown as SimpleAuction;
  }
}
