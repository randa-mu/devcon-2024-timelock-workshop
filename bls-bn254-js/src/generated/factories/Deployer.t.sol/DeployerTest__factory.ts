/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DeployerTest,
  DeployerTestInterface,
} from "../../Deployer.t.sol/DeployerTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSelectors",
    inputs: [],
    outputs: [
      {
        name: "excludedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setUp",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzArtifactSelector[]",
        components: [
          {
            name: "artifact",
            type: "string",
            internalType: "string",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testDeterministicDeploy",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600c8054600160ff199182168117909255601f8054909116909117905534801561002c575f80fd5b506118ae8061003a5f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c806385226c8111610088578063b5508aa911610063578063b5508aa914610185578063ba414fa61461018d578063e20c9f71146101a5578063fa7626d4146101ad575f80fd5b806385226c8114610153578063916a17c614610168578063b0464fdc1461017d575f80fd5b8063348fecd5116100c3578063348fecd5146101265780633e5e3c231461012e5780633f7286f41461013657806366d9a9a01461013e575f80fd5b80630a9254e4146100e95780631ed7831c146100f35780632ade388014610111575b5f80fd5b6100f16101ba565b005b6100fb61028d565b6040516101089190610f92565b60405180910390f35b6101196102fa565b6040516101089190611056565b6100f1610443565b6100fb6107b9565b6100fb610824565b61014661088f565b60405161010891906111b8565b61015b610a08565b604051610108919061125b565b610170610ad3565b60405161010891906112db565b610170610bd6565b61015b610cd9565b610195610da4565b6040519015158152602001610108565b6100fb610e74565b601f546101959060ff1681565b6040516101c690610f78565b604051809103905ff0801580156101df573d5f803e3d5ffd5b50601f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405161022c90610f85565b604051809103905ff080158015610245573d5f803e3d5ffd5b50602080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b606060168054806020026020016040519081016040528092919081815260200182805480156102f057602002820191905f5260205f20905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c5575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101561043a575f848152602080822060408051808201825260028702909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610423578382905f5260205f2001805461039890611375565b80601f01602080910402602001604051908101604052809291908181526020018280546103c490611375565b801561040f5780601f106103e65761010080835404028352916020019161040f565b820191905f5260205f20905b8154815290600101906020018083116103f257829003601f168201915b50505050508152602001906001019061037b565b50505050815250508152602001906001019061031d565b50505050905090565b6040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081526001600482015268056bc75e2d631000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d906044015f604051808303815f87803b1580156104b5575f80fd5b505af11580156104c7573d5f803e3d5ffd5b50506040517f06447d5600000000000000000000000000000000000000000000000000000000815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d5691506024015f604051808303815f87803b15801561052e575f80fd5b505af1158015610540573d5f803e3d5ffd5b50506040517f313233343500000000000000000000000000000000000000000000000000000092505f915061057760208201610f85565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526105b791906020016113c6565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815290829052601f54815160208301207f481286e60000000000000000000000000000000000000000000000000000000084526004840186905260248401529092505f9161010090910473ffffffffffffffffffffffffffffffffffffffff169063481286e690604401602060405180830381865afa158015610665573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068991906113e1565b601f546040517fcdcb760a0000000000000000000000000000000000000000000000000000000081529192505f9161010090910473ffffffffffffffffffffffffffffffffffffffff169063cdcb760a906106ea908790879060040161141b565b6020604051808303815f875af1158015610706573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072a91906113e1565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c73ffffffffffffffffffffffffffffffffffffffff166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610793575f80fd5b505af11580156107a5573d5f803e3d5ffd5b505050506107b38282610edf565b50505050565b606060188054806020026020016040519081016040528092919081815260200182805480156102f057602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c5575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156102f057602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c5575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101561043a578382905f5260205f2090600202016040518060400160405290815f820180546108e290611375565b80601f016020809104026020016040519081016040528092919081815260200182805461090e90611375565b80156109595780601f1061093057610100808354040283529160200191610959565b820191905f5260205f20905b81548152906001019060200180831161093c57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156109f057602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161099d5790505b505050505081525050815260200190600101906108b2565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101561043a578382905f5260205f20018054610a4890611375565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7490611375565b8015610abf5780601f10610a9657610100808354040283529160200191610abf565b820191905f5260205f20905b815481529060010190602001808311610aa257829003601f168201915b505050505081526020019060010190610a2b565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101561043a575f84815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015610bbe57602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610b6b5790505b50505050508152505081526020019060010190610af6565b6060601c805480602002602001604051908101604052809291908181526020015f905b8282101561043a575f84815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015610cc157602002820191905f5260205f20905f905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610c6e5790505b50505050508152505081526020019060010190610bf9565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101561043a578382905f5260205f20018054610d1990611375565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590611375565b8015610d905780601f10610d6757610100808354040283529160200191610d90565b820191905f5260205f20905b815481529060010190602001808311610d7357829003601f168201915b505050505081526020019060010190610cfc565b6008545f9060ff1615610dbb575060085460ff1690565b6040517f667f9d70000000000000000000000000000000000000000000000000000000008152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c6564000000000000000000000000000000000000000000000000000060248301525f9163667f9d7090604401602060405180830381865afa158015610e49573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6d919061143b565b1415905090565b606060158054806020026020016040519081016040528092919081815260200182805480156102f057602002820191905f5260205f2090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116102c5575050505050905090565b6040517f515361f600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416600483015282166024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063515361f6906044015f6040518083038186803b158015610f5e575f80fd5b505afa158015610f70573d5f803e3d5ffd5b505050505050565b61030e8061145383390190565b6101188061176183390190565b602080825282518282018190525f9190848201906040850190845b81811015610fdf57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610fad565b50909695505050505050565b5f5b83811015611005578181015183820152602001610fed565b50505f910152565b5f8151808452611024816020860160208601610feb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602080825282518282018190525f919060409081850190600581811b87018401888601875b8481101561114d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a84030186528151805173ffffffffffffffffffffffffffffffffffffffff168452880151888401889052805188850181905290890190606081871b8601810191908601905f5b81811015611137577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088850301835261112584865161100d565b948d01949350918c01916001016110eb565b505050968901969350509087019060010161107b565b50909998505050505050505050565b5f815180845260208085019450602084015f5b838110156111ad5781517fffffffff00000000000000000000000000000000000000000000000000000000168752958201959082019060010161116f565b509495945050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561124d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0898403018552815180518785526112218886018261100d565b91890151858303868b0152919050611239818361115c565b9689019694505050908601906001016111df565b509098975050505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b828110156112ce577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526112bc85835161100d565b94509285019290850190600101611282565b5092979650505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561124d578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790526113628785018261115c565b9588019593505090860190600101611302565b600181811c9082168061138957607f821691505b6020821081036113c0577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b5f82516113d7818460208701610feb565b9190910192915050565b5f602082840312156113f1575f80fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114611414575f80fd5b9392505050565b828152604060208201525f611433604083018461100d565b949350505050565b5f6020828403121561144b575f80fd5b505191905056fe608060405234801561000f575f80fd5b506102f18061001d5f395ff3fe608060405260043610610028575f3560e01c8063481286e61461002c578063cdcb760a14610074575b5f80fd5b348015610037575f80fd5b5061004b61004636600461019b565b610087565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004b6100823660046101e8565b6100b1565b6040805190810182905260208101839052308082525f91600b0160ff815360559020949350505050565b5f81515f036100ec576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8383516020850134f5905073ffffffffffffffffffffffffffffffffffffffff8116610145576040517f741752c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff83168152602081018690527f4108529e399e9cd5343c48ae06aa62a23c8c1b7c93f59d4691a0ea1e6f5b4603910160405180910390a19392505050565b5f80604083850312156101ac575f80fd5b50508035926020909101359150565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f80604083850312156101f9575f80fd5b82359150602083013567ffffffffffffffff80821115610217575f80fd5b818501915085601f83011261022a575f80fd5b81358181111561023c5761023c6101bb565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610282576102826101bb565b8160405282815288602084870101111561029a575f80fd5b826020860160208301375f602084830101528095505050505050925092905056fea264697066735822122012d8e83c767f1f5310ef2ca470fd1f09fdf59921d704f1192d90701e9214905864736f6c6343000818003360806040525f8055348015610012575f80fd5b5060f98061001f5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c806306661abd146034578063d09de08a14604d575b5f80fd5b603b5f5481565b60405190815260200160405180910390f35b60536055565b005b5f805490806061836068565b9190505550565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820360bc577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b506001019056fea264697066735822122000bc22564b90745d8bc6c20d6a3cbd68b7944e22f882ea58c0e919d0afc4ae6e64736f6c63430008180033a2646970667358221220f49a5cea2c03fea6b8649c73037911bb7da00b65561927209cd7694bdeea07ac64736f6c63430008180033";

type DeployerTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployerTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeployerTest__factory extends ContractFactory {
  constructor(...args: DeployerTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DeployerTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DeployerTest__factory {
    return super.connect(runner) as DeployerTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployerTestInterface {
    return new Interface(_abi) as DeployerTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DeployerTest {
    return new Contract(address, _abi, runner) as unknown as DeployerTest;
  }
}
